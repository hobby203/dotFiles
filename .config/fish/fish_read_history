- cmd: function bind_bang\n  switch (commandline -t)\n  case "!"\n    commandline -t $history[1]; commandline -f repaint\n  case "*"\n    commandline -i !\n  end\nend
  when: 1452376033
- cmd: function bind_bang\nswitch (commandline -t)\ncase "!"\ncommandline -t $history[1]\ncommandline -f repaint\ncase "*"\ncommandline -i !\nend\nend
  when: 1452376063
- cmd: function bind_dollar\nswitch (commandline -t)\ncase "!"\ncommandline -t ""\ncommandline -f history-token-search-backward\ncase "*"\ncommandline -i '$'\nend\nend
  when: 1452376080
- cmd: function fish_default_key_bindings --description 'Default (Emacs-like) key bindings for fish' --argument mode\nif not set -q mode[1]\n# Clear earlier bindings, if any\nbind --erase --all\nend\n\n# This is the default binding, i.e. the one used if no other binding matches\nbind $argv "" self-insert\n\nbind $argv \\n execute\n\nbind $argv \\ck kill-line\nbind $argv \\cy yank\nbind $argv \\t complete\n\nbind $argv \\e\\n "commandline -i \\n"\n\nbind $argv \\e\\[A up-or-search\nbind $argv \\e\\[B down-or-search\nbind $argv -k down down-or-search\nbind $argv -k up up-or-search\n\nbind $argv \\e\\[C forward-char\nbind $argv \\e\\[D backward-char\nbind $argv -k right forward-char\nbind $argv -k left backward-char\n\nbind $argv -k dc delete-char\nbind $argv -k backspace backward-delete-char\nbind $argv \\x7f backward-delete-char\n\nbind $argv \\e\\[H beginning-of-line\nbind $argv \\e\\[F end-of-line\n\n# for PuTTY\n# https://github.com/fish-shell/fish-shell/issues/180\nbind $argv \\e\\[1~ beginning-of-line\nbind $argv \\e\\[3~ delete-char\nbind $argv \\e\\[4~ end-of-line\n\n# OS X SnowLeopard doesn't have these keys. Don't show an annoying error message.\nbind $argv -k home beginning-of-line 2> /dev/null\nbind $argv -k end end-of-line 2> /dev/null\nbind $argv \\e\\[3\\;2~ backward-delete-char # Mavericks Terminal.app shift-delete\n\nbind $argv \\e\\eOC nextd-or-forward-word\nbind $argv \\e\\eOD prevd-or-backward-word\nbind $argv \\e\\e\\[C nextd-or-forward-word\nbind $argv \\e\\e\\[D prevd-or-backward-word\nbind $argv \\eO3C nextd-or-forward-word\nbind $argv \\eO3D prevd-or-backward-word\nbind $argv \\e\\[3C nextd-or-forward-word\nbind $argv \\e\\[3D prevd-or-backward-word\nbind $argv \\e\\[1\\;3C nextd-or-forward-word\nbind $argv \\e\\[1\\;3D prevd-or-backward-word\n\nbind $argv \\e\\eOA history-token-search-backward\nbind $argv \\e\\eOB history-token-search-forward\nbind $argv \\e\\e\\[A history-token-search-backward\nbind $argv \\e\\e\\[B history-token-search-forward\nbind $argv \\eO3A history-token-search-backward\nbind $argv \\eO3B history-token-search-forward\nbind $argv \\e\\[3A history-token-search-backward\nbind $argv \\e\\[3B history-token-search-forward\nbind $argv \\e\\[1\\;3A history-token-search-backward\nbind $argv \\e\\[1\\;3B history-token-search-forward\n\nbind $argv \\ca beginning-of-line\nbind $argv \\ce end-of-line\nbind $argv \\ey yank-pop\nbind $argv \\ch backward-delete-char\nbind $argv \\cw backward-kill-word\nbind $argv \\cp history-search-backward\nbind $argv \\cn history-search-forward\nbind $argv \\cf forward-char\nbind $argv \\cb backward-char\nbind $argv \\ct transpose-chars\nbind $argv \\et transpose-words\nbind $argv \\eu upcase-word\n\n# This clashes with __fish_list_current_token\n# bind $argv \\el downcase-word\nbind $argv \\ec capitalize-word\nbind $argv \\e\\x7f backward-kill-word\nbind $argv \\eb backward-word\nbind $argv \\ef forward-word\nbind $argv \\e\\[1\\;5C forward-word\nbind $argv \\e\\[1\\;5D backward-word\nbind $argv \\e\\[1\\;9A history-token-search-backward # iTerm2\nbind $argv \\e\\[1\\;9B history-token-search-forward # iTerm2\nbind $argv \\e\\[1\\;9C forward-word #iTerm2\nbind $argv \\e\\[1\\;9D backward-word #iTerm2\n# Bash compatibility\n# https://github.com/fish-shell/fish-shell/issues/89\nbind $argv \\e. history-token-search-backward\nbind $argv -k ppage beginning-of-history\nbind $argv -k npage end-of-history\nbind $argv \\e\\< beginning-of-buffer\nbind $argv \\e\\> end-of-buffer\n\nbind $argv \\el __fish_list_current_token\nbind $argv \\ew 'set tok (commandline -pt); if test $tok[1]; echo; whatis $tok[1]; commandline -f repaint; end'\nbind $argv \\cl 'clear; commandline -f repaint'\nbind $argv \\cc 'commandline ""'\nbind $argv \\cu backward-kill-line\nbind $argv \\cw backward-kill-path-component\nbind $argv \\ed 'set -l cmd (commandline); if test -z "$cmd"; echo; dirh; commandline -f repaint; else; commandline -f kill-word; end'\nbind $argv \\cd delete-or-exit\n\nbind \\ed forward-kill-word\nbind \\ed kill-word\n\n# Allow reading manpages by pressing F1 (many GUI applications) or Alt+h (like in zsh)\nbind $argv -k f1 __fish_man_page\nbind $argv \\eh __fish_man_page\n\n# This will make sure the output of the current command is paged using the less pager when you press Meta-p\nbind $argv \\ep '__fish_paginate'\n\n# shift-tab does a tab complete followed by a search\nbind --key btab complete-and-search\n\n# escape cancels stuff	\nbind \\e cancel\n\n# Ignore some known-bad control sequences\n# https://github.com/fish-shell/fish-shell/issues/1917\nbind \\e\\[I 'begin;end'\nbind \\e\\[O 'begin;end'\n\n# term-specific special bindings\nswitch "$TERM"\ncase 'rxvt*'\nbind $argv \\e\\[8~ end-of-line\nbind $argv \\eOc forward-word\nbind $argv \\eOd backward-word\nend\nend
  when: 1452376152
- cmd: function fish_default_key_bindings --description 'Default (Emacs-like) key bindings for fish' --argument mode\nif not set -q mode[1]\n# Clear earlier bindings, if any\nbind --erase --all\nend\n\n# This is the default binding, i.e. the one used if no other binding matches\nbind $argv "" self-insert\n\nbind $argv \\n execute\n\nbind $argv \\ck kill-line\nbind $argv \\cy yank\nbind $argv \\t complete\n\nbind $argv \\e\\n "commandline -i \\n"\n\nbind $argv \\e\\[A up-or-search\nbind $argv \\e\\[B down-or-search\nbind $argv -k down down-or-search\nbind $argv -k up up-or-search\n\nbind $argv \\e\\[C forward-char\nbind $argv \\e\\[D backward-char\nbind $argv -k right forward-char\nbind $argv -k left backward-char\n\nbind $argv -k dc delete-char\nbind $argv -k backspace backward-delete-char\nbind $argv \\x7f backward-delete-char\n\nbind $argv \\e\\[H beginning-of-line\nbind $argv \\e\\[F end-of-line\n\n# for PuTTY\n# https://github.com/fish-shell/fish-shell/issues/180\nbind $argv \\e\\[1~ beginning-of-line\nbind $argv \\e\\[3~ delete-char\nbind $argv \\e\\[4~ end-of-line\n\n# OS X SnowLeopard doesn't have these keys. Don't show an annoying error message.\nbind $argv -k home beginning-of-line 2> /dev/null\nbind $argv -k end end-of-line 2> /dev/null\nbind $argv \\e\\[3\\;2~ backward-delete-char # Mavericks Terminal.app shift-delete\n\nbind $argv \\e\\eOC nextd-or-forward-word\nbind $argv \\e\\eOD prevd-or-backward-word\nbind $argv \\e\\e\\[C nextd-or-forward-word\nbind $argv \\e\\e\\[D prevd-or-backward-word\nbind $argv \\eO3C nextd-or-forward-word\nbind $argv \\eO3D prevd-or-backward-word\nbind $argv \\e\\[3C nextd-or-forward-word\nbind $argv \\e\\[3D prevd-or-backward-word\nbind $argv \\e\\[1\\;3C nextd-or-forward-word\nbind $argv \\e\\[1\\;3D prevd-or-backward-word\n\nbind $argv \\e\\eOA history-token-search-backward\nbind $argv \\e\\eOB history-token-search-forward\nbind $argv \\e\\e\\[A history-token-search-backward\nbind $argv \\e\\e\\[B history-token-search-forward\nbind $argv \\eO3A history-token-search-backward\nbind $argv \\eO3B history-token-search-forward\nbind $argv \\e\\[3A history-token-search-backward\nbind $argv \\e\\[3B history-token-search-forward\nbind $argv \\e\\[1\\;3A history-token-search-backward\nbind $argv \\e\\[1\\;3B history-token-search-forward\n\nbind $argv \\ca beginning-of-line\nbind $argv \\ce end-of-line\nbind $argv \\ey yank-pop\nbind $argv \\ch backward-delete-char\nbind $argv \\cw backward-kill-word\nbind $argv \\cp history-search-backward\nbind $argv \\cn history-search-forward\nbind $argv \\cf forward-char\nbind $argv \\cb backward-char\nbind $argv \\ct transpose-chars\nbind $argv \\et transpose-words\nbind $argv \\eu upcase-word\n\n# This clashes with __fish_list_current_token\n# bind $argv \\el downcase-word\nbind $argv \\ec capitalize-word\nbind $argv \\e\\x7f backward-kill-word\nbind $argv \\eb backward-word\nbind $argv \\ef forward-word\nbind $argv \\e\\[1\\;5C forward-word\nbind $argv \\e\\[1\\;5D backward-word\nbind $argv \\e\\[1\\;9A history-token-search-backward # iTerm2\nbind $argv \\e\\[1\\;9B history-token-search-forward # iTerm2\nbind $argv \\e\\[1\\;9C forward-word #iTerm2\nbind $argv \\e\\[1\\;9D backward-word #iTerm2\n# Bash compatibility\n# https://github.com/fish-shell/fish-shell/issues/89\nbind $argv \\e. history-token-search-backward\nbind $argv -k ppage beginning-of-history\nbind $argv -k npage end-of-history\nbind $argv \\e\\< beginning-of-buffer\nbind $argv \\e\\> end-of-buffer\n\nbind $argv \\el __fish_list_current_token\nbind $argv \\ew 'set tok (commandline -pt); if test $tok[1]; echo; whatis $tok[1]; commandline -f repaint; end'\nbind $argv \\cl 'clear; commandline -f repaint'\nbind $argv \\cc 'commandline ""'\nbind $argv \\cu backward-kill-line\nbind $argv \\cw backward-kill-path-component\nbind $argv \\ed 'set -l cmd (commandline); if test -z "$cmd"; echo; dirh; commandline -f repaint; else; commandline -f kill-word; end'\nbind $argv \\cd delete-or-exit\n\nbind \\ed forward-kill-word\nbind \\ed kill-word\n\n# Allow reading manpages by pressing F1 (many GUI applications) or Alt+h (like in zsh)\nbind $argv -k f1 __fish_man_page\nbind $argv \\eh __fish_man_page\n\n# This will make sure the output of the current command is paged using the less pager when you press Meta-p\nbind $argv \\ep '__fish_paginate'\n\n# shift-tab does a tab complete followed by a search\nbind --key btab complete-and-search\n\n# escape cancels stuff	\nbind \\e cancel\n\n# Ignore some known-bad control sequences\n# https://github.com/fish-shell/fish-shell/issues/1917\nbind \\e\\[I 'begin;end'\nbind \\e\\[O 'begin;end'\n\n# term-specific special bindings\nswitch "$TERM"\ncase 'rxvt*'\nbind $argv \\e\\[8~ end-of-line\nbind $argv \\eOc forward-word\nbind $argv \\eOd backward-word\nend\nbind ! bind_bang\nbind '$' bind_dollar\nend
  when: 1452376190
